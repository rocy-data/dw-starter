<xs:schema xsi:schemaLocation="https://www.rocy-data.com/dw/v1.0.0 dw.xsd https://www.rocy-data.com/dw/refs dw_refs.xsd"
           targetNamespace="https://www.rocy-data.com/di_ml/v1.0.0" elementFormDefault="qualified"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dw="https://www.rocy-data.com/dw/v1.0.0"
           xmlns:refs="https://www.rocy-data.com/dw/refs" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexType name="transform_ml_estimator">
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="model_path" type="refs:valid_path"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model">
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
              <xs:attribute name="estimator_id" type="refs:estimator_id"/>
              <xs:attribute name="model_path" type="refs:valid_path"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_pipeline">
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="pipeline_id" type="refs:di_pipeline_id" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="sources">
        <xs:complexContent>
            <xs:extension base="dw:sources">
                <xs:sequence>
                    <xs:choice>
                        <xs:element name="source_ml_model_file">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="dw:source_path">
                                        <xs:attribute name="is_output_metadata" type="xs:boolean"/>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="source_ml_model_invoke">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="dw:source_path">
                                        <xs:attribute name="method_name" use="required"/>
                                        <xs:attribute name="method_parameters"/>
                                        <xs:anyAttribute/>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="source_ml_libsvm" type="dw:source_path"/>
                        <xs:element name="source_ml_image">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="dw:source_path">
                                        <xs:attribute name="dropInvalid" type="xs:boolean"/>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="array_double">
        <xs:list itemType="xs:double"/>
    </xs:simpleType>
    <xs:simpleType name="array_string">
        <xs:list itemType="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="array_int">
        <xs:list itemType="xs:int"/>
    </xs:simpleType>
    <xs:complexType name="variable_actions">
        <xs:sequence>
            <xs:choice>
                <xs:element name="transform_ml_transformer_feature_polynomial_expansion" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_polynomial_expansion">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_local_lda" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_local_lda">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_sql_transformer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_sql_transformer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_index_to_string" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_index_to_string">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_chi_sq_selector" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_chi_sq_selector">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_size_hint" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_size_hint">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_random_forest_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_random_forest_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_tuning_train_validation_split" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_tuning_train_validation_split">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_one_vs_rest" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_one_vs_rest">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_min_hash_lsh" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_min_hash_lsh">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="sink_ml_evaluator_multiclass_classification" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="sink_ml_evaluator_multiclass_classification">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_logistic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_logistic_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_one_hot_encoder" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_one_hot_encoder">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_column_pruner" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_column_pruner">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_logistic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_logistic_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_gbt_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_gbt_classification">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_count_vectorizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_count_vectorizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_linear_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_naive_bayes" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_naive_bayes">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_quantile_discretizer" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_quantile_discretizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_gaussian_mixture" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_gaussian_mixture">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_attribute_rewriter" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_attribute_rewriter">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_pca" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_pca">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_aft_survival_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_aft_survival_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_multilayer_perceptron_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_multilayer_perceptron_classification">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_elementwise_product" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_elementwise_product">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_r_formula" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_r_formula">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_fp_growth" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_fp_growth">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_random_forest_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_random_forest_classifier">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_fp_growth" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_fp_growth">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_naive_bayes" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_naive_bayes">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_standard_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_standard_scaler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_dct" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_dct">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_gaussian_mixture" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_gaussian_mixture">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_linear_regression" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_linear_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_linear_svc" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_linear_svc">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_interaction" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_interaction">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_feature_hasher" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_feature_hasher">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_word_vec" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_word_vec">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_decision_tree_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_decision_tree_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_stop_words_remover" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_stop_words_remover">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_min_max_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_min_max_scaler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_recommendation_als" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_recommendation_als">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_min_max_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_min_max_scaler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_db_scan" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_db_scan">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_random_forest_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_random_forest_classification">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_gbt_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_gbt_classifier">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_vector_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_vector_indexer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_pca" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_pca">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_group_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_group_linear_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_recommendation_als" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_recommendation_als">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_one_hot_encoder" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_one_hot_encoder">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_max_abs_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_max_abs_scaler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_bucketed_random_projection_lsh" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_bucketed_random_projection_lsh">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_k_means" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_k_means">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_decision_tree_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_decision_tree_classifier">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_distributed_lda" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_distributed_lda">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_isotonic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_isotonic_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_bucketizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_bucketizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_string_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_string_indexer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_decision_tree_regressor" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_decision_tree_regressor">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_min_hash_lsh" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_min_hash_lsh">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_imputer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_imputer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_lda" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_lda">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_slicer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_slicer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_tuning_cross_validator" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_tuning_cross_validator">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_one_vs_rest" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_one_vs_rest">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_regex_tokenizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_regex_tokenizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="sink_ml_evaluator_regression" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="sink_ml_evaluator_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_vector_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_vector_indexer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_one_hot_encoder" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_one_hot_encoder">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_string_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_string_indexer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_imputer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_imputer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_assembler" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_assembler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_max_abs_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_max_abs_scaler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_gbt_regression" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_gbt_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_aft_survival_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_aft_survival_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_r_formula" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_r_formula">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_normalizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_normalizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_idf" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_idf">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_decision_tree_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_decision_tree_classification">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_random_forest_regressor" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_random_forest_regressor">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_tuning_train_validation_split" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_tuning_train_validation_split">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_tuning_cross_validator" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_tuning_cross_validator">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_linear_svc" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_linear_svc">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_n_gram" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_n_gram">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_multilayer_perceptron_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_multilayer_perceptron_classifier">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_generalized_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_generalized_linear_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_gbt_regressor" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_gbt_regressor">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_binarizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_binarizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_k_means" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_k_means">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_word_vec" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_word_vec">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_generalized_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_generalized_linear_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_db_scan" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_db_scan">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_count_vectorizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_count_vectorizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="sink_ml_evaluator_clustering" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="sink_ml_evaluator_clustering">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_standard_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_standard_scaler">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_bisecting_k_means" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_bisecting_k_means">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_hashing_tf" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_hashing_tf">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_isotonic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_isotonic_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="sink_ml_evaluator_binary_classification" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="sink_ml_evaluator_binary_classification">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_bucketed_random_projection_lsh" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_bucketed_random_projection_lsh">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_bisecting_k_means" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_bisecting_k_means">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_tokenizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_tokenizer">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_group_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_group_linear_regression">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_idf" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_idf">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_chi_sq_selector" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_chi_sq_selector">
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="transforms_pipeline">
        <xs:sequence>
            <xs:choice>
                <xs:element name="transform_ml_transformer_feature_vector_size_hint" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_size_hint">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_one_vs_rest" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_one_vs_rest">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_random_forest_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_random_forest_classifier">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_regex_tokenizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_regex_tokenizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_lda" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_lda">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_interaction" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_interaction">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_one_hot_encoder" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_one_hot_encoder">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_min_hash_lsh" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_min_hash_lsh">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_imputer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_imputer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_isotonic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_isotonic_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_gbt_regression" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_gbt_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_decision_tree_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_decision_tree_classification">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_string_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_string_indexer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_decision_tree_regressor" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_decision_tree_regressor">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_group_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_group_linear_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_normalizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_normalizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_vector_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_vector_indexer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_column_pruner" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_column_pruner">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_group_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_group_linear_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_pca" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_pca">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_standard_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_standard_scaler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_count_vectorizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_count_vectorizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_index_to_string" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_index_to_string">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_feature_hasher" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_feature_hasher">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_distributed_lda" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_distributed_lda">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_count_vectorizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_count_vectorizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_assembler" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_assembler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_aft_survival_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_aft_survival_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_db_scan" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_db_scan">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_min_hash_lsh" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_min_hash_lsh">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_db_scan" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_db_scan">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_linear_regression" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_linear_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_chi_sq_selector" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_chi_sq_selector">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_n_gram" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_n_gram">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_binarizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_binarizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_linear_svc" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_linear_svc">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_multilayer_perceptron_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_multilayer_perceptron_classification">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_linear_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_random_forest_regressor" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_random_forest_regressor">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_polynomial_expansion" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_polynomial_expansion">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_aft_survival_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_aft_survival_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_dct" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_dct">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_logistic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_logistic_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_decision_tree_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_decision_tree_classifier">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_imputer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_imputer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_min_max_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_min_max_scaler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_naive_bayes" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_naive_bayes">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_one_hot_encoder" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_one_hot_encoder">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_gbt_regressor" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_gbt_regressor">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_attribute_rewriter" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_attribute_rewriter">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_bucketed_random_projection_lsh" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_bucketed_random_projection_lsh">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_word_vec" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_word_vec">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_r_formula" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_r_formula">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_gaussian_mixture" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_gaussian_mixture">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_recommendation_als" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_recommendation_als">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_random_forest_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_random_forest_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_idf" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_idf">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_one_hot_encoder" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_one_hot_encoder">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_naive_bayes" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_naive_bayes">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_max_abs_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_max_abs_scaler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_word_vec" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_word_vec">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_standard_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_standard_scaler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_isotonic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_isotonic_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_fp_growth" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_fp_growth">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_gbt_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_gbt_classifier">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_k_means" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_k_means">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_string_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_string_indexer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_gbt_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_gbt_classification">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_fp_growth" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_fp_growth">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_multilayer_perceptron_classifier" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_multilayer_perceptron_classifier">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_local_lda" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_local_lda">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_bucketed_random_projection_lsh" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_bucketed_random_projection_lsh">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_tuning_train_validation_split" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_tuning_train_validation_split">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_tokenizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_tokenizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_regression_generalized_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_regression_generalized_linear_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_clustering_bisecting_k_means" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_clustering_bisecting_k_means">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_vector_slicer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_vector_slicer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_tuning_cross_validator" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_tuning_cross_validator">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_k_means" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_k_means">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_min_max_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_min_max_scaler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_tuning_train_validation_split" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_tuning_train_validation_split">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_chi_sq_selector" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_chi_sq_selector">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_recommendation_als" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_recommendation_als">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_gaussian_mixture" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_gaussian_mixture">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_vector_indexer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_vector_indexer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_decision_tree_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_decision_tree_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_quantile_discretizer" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_quantile_discretizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_hashing_tf" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_hashing_tf">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_bucketizer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_bucketizer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_stop_words_remover" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_stop_words_remover">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_pca" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_pca">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_feature_r_formula" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_feature_r_formula">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_tuning_cross_validator" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_tuning_cross_validator">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_idf" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_idf">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_logistic_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_logistic_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_random_forest_classification" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_random_forest_classification">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_feature_max_abs_scaler" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_feature_max_abs_scaler">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_sql_transformer" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_sql_transformer">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_classification_linear_svc" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_classification_linear_svc">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_transformer_feature_elementwise_product" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_transformer_feature_elementwise_product">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_clustering_bisecting_k_means" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_clustering_bisecting_k_means">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_estimator_classification_one_vs_rest" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_estimator_classification_one_vs_rest">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_pipeline" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_pipeline">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="transform_ml_model_regression_generalized_linear_regression" minOccurs="0"
                            maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="transform_ml_model_regression_generalized_linear_regression">
                                <xs:attribute name="is_begin" type="xs:boolean"/>
                                <xs:attribute name="transform_ref" use="prohibited"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_gbt_classifier">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.GBTClassifier:cache_node_ids=If false, the algorithm will pass trees
                to executors to match instances with nodes. If true, the algorithm will cache node IDs for each
                instance. Caching can speed up training of deeper trees.;checkpoint_interval=set checkpoint interval (&gt;=
                1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations.
                Note: this setting will be ignored if the checkpoint directory is not set in the
                SparkContext;feature_sub_strategy=;features_col=features column name;impurity=Criterion used for
                information gain calculation (case-insensitive). Supported options: entropy, gini;label_col=label column
                name;loss_type=Loss function which GBT tries to minimize (case-insensitive). Supported options:
                logistic;max_bins=Max number of bins for discretizing continuous features. Must be &gt;=2 and &gt;=
                number of categories for any categorical feature.;max_depth=Maximum depth of the tree. (&gt;= 0) E.g.,
                depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.;max_iter=maximum number of
                iterations (&gt;= 0);max_memory_in_mb=Maximum memory in MB allocated to histogram
                aggregation.;min_info_gain=Minimum information gain for a split to be considered at a tree
                node.;min_instances_per_node=Minimum number of instances each child must have after split. If a split
                causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as
                invalid. Should be &gt;= 1.;prediction_col=prediction column name;probability_col=Column name for
                predicted class conditional probabilities. Note: Not all models output well-calibrated probability
                estimates! These probabilities should be treated as confidences, not precise
                probabilities;raw_prediction_col=raw prediction (a.k.a. confidence) column name;seed=;step_size=Step
                size (a.k.a. learning rate) in interval (0, 1] for shrinking the contribution of each
                estimator.;subsampling_rate=Fraction of the training data used for learning each decision tree, in range
                (0, 1].;thresholds_array_double=;validation_indicator_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="loss_type" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="step_size" type="xs:double"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
                <xs:attribute name="validation_indicator_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_logistic_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.LogisticRegression:aggregation_depth=suggested depth for
                treeAggregate (&gt;= 2);elastic_net_param=the ElasticNet mixing parameter, in range [0, 1]. For alpha =
                0, the penalty is an L2 penalty. For alpha = 1, it is an L1 penalty;family=The name of family which is a
                description of the label distribution to be used in the model. Supported options: auto, binomial,
                multinomial.;features_col=features column name;fit_intercept=whether to fit an intercept
                term;label_col=label column
                name;lower_bounds_on_coefficients_matrix=;lower_bounds_on_intercepts_vector=;max_iter=maximum number of
                iterations (&gt;= 0);prediction_col=prediction column name;probability_col=Column name for predicted
                class conditional probabilities. Note: Not all models output well-calibrated probability estimates!
                These probabilities should be treated as confidences, not precise probabilities;raw_prediction_col=raw
                prediction (a.k.a. confidence) column name;reg_param=regularization parameter (&gt;=
                0);standardization=whether to standardize the training features before fitting the
                model;threshold=threshold in binary classification prediction, in range [0,
                1];thresholds_array_double=;tol=the convergence tolerance for iterative algorithms (&gt;=
                0);upper_bounds_on_coefficients_matrix=;upper_bounds_on_intercepts_vector=;weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="aggregation_depth" type="xs:int"/>
                <xs:attribute name="elastic_net_param" type="xs:double"/>
                <xs:attribute name="family" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="fit_intercept" type="xs:boolean"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="lower_bounds_on_coefficients_matrix" type="xs:string"/>
                <xs:attribute name="lower_bounds_on_intercepts_vector" type="array_double"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="reg_param" type="xs:double"/>
                <xs:attribute name="standardization" type="xs:boolean"/>
                <xs:attribute name="threshold" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
                <xs:attribute name="tol" type="xs:double"/>
                <xs:attribute name="upper_bounds_on_coefficients_matrix" type="xs:string"/>
                <xs:attribute name="upper_bounds_on_intercepts_vector" type="array_double"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_linear_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.LinearRegression:aggregation_depth=suggested depth for treeAggregate (&gt;=
                2);elastic_net_param=the ElasticNet mixing parameter, in range [0, 1]. For alpha = 0, the penalty is an
                L2 penalty. For alpha = 1, it is an L1 penalty;epsilon=The shape parameter to control the amount of
                robustness. Must be &gt; 1.0.;features_col=features column name;fit_intercept=whether to fit an
                intercept term;label_col=label column name;loss=The loss function to be optimized. Supported options:
                squaredError, huber. (Default squaredError);max_iter=maximum number of iterations (&gt;=
                0);prediction_col=prediction column name;reg_param=regularization parameter (&gt;= 0);solver=The solver
                algorithm for optimization. Supported options: auto, normal, l-bfgs. (Default
                auto);standardization=whether to standardize the training features before fitting the model;tol=the
                convergence tolerance for iterative algorithms (&gt;= 0);weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="aggregation_depth" type="xs:int"/>
                <xs:attribute name="elastic_net_param" type="xs:double"/>
                <xs:attribute name="epsilon" type="xs:double"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="fit_intercept" type="xs:boolean"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="loss" type="xs:string"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="reg_param" type="xs:double"/>
                <xs:attribute name="solver" type="xs:string"/>
                <xs:attribute name="standardization" type="xs:boolean"/>
                <xs:attribute name="tol" type="xs:double"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_standard_scaler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.StandardScaler:input_col=;output_col=output column name;with_mean=Whether to
                center data with mean;with_std=Whether to scale the data to unit standard deviation
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="with_mean" type="xs:boolean"/>
                <xs:attribute name="with_std" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_regex_tokenizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.RegexTokenizer:gaps=Set regex to match gaps or
                tokens;input_col=;min_token_length=minimum token length (&gt;= 0);output_col=output column
                name;pattern=regex pattern used for tokenizing;to_lowercase=whether to convert all characters to
                lowercase before tokenizing.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="gaps" type="xs:boolean"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="min_token_length" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="to_lowercase" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_chi_sq_selector">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.ChiSqSelector:fdr=The upper bound of the expected false discovery
                rate.;features_col=features column name;fpr=The highest p-value for features to be kept.;fwe=The upper
                bound of the expected family-wise error rate.;label_col=label column name;num_top_features=Number of
                features that selector will select, ordered by ascending p-value. If the number of features is &lt;
                numTopFeatures, then this will select all features.;output_col=output column name;percentile=Percentile
                of features that selector will select, ordered by ascending p-value.;selector_type=The selector type of
                the ChisqSelector. Supported options: numTopFeatures, percentile, fpr, fdr, fwe
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="fdr" type="xs:double"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="fpr" type="xs:double"/>
                <xs:attribute name="fwe" type="xs:double"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="num_top_features" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="percentile" type="xs:double"/>
                <xs:attribute name="selector_type" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_aft_survival_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.AFTSurvivalRegressionModel:features_col=;prediction_col=;quantile_probabilities_array_double=;quantiles_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="quantile_probabilities_array_double" type="array_double"/>
                <xs:attribute name="quantiles_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_polynomial_expansion">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.PolynomialExpansion:degree=the polynomial degree to expand (&gt;=
                1);input_col=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="degree" type="xs:int"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_fp_growth">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.fpm.FPGrowthModel:items_col=;min_confidence=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="items_col" type="xs:string"/>
                <xs:attribute name="min_confidence" type="xs:double"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_index_to_string">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.IndexToString:input_col=;labels_array_string=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="labels_array_string" type="array_string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_bucketed_random_projection_lsh">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.BucketedRandomProjectionLSHModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_clustering_gaussian_mixture">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.GaussianMixture:features_col=features column name;k=Number of independent
                Gaussians in the mixture model. Must be &gt; 1.;max_iter=maximum number of iterations (&gt;=
                0);prediction_col=prediction column name;probability_col=Column name for predicted class conditional
                probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities
                should be treated as confidences, not precise probabilities;seed=;tol=the convergence tolerance for
                iterative algorithms (&gt;= 0)
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="k" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="tol" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_one_vs_rest">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.OneVsRestModel:features_col=;prediction_col=;raw_prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_generalized_linear_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.GeneralizedLinearRegressionModel:features_col=;link_prediction_col=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="link_prediction_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="sink_ml_evaluator_clustering">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.evaluation.ClusteringEvaluator:distance_measure=distance measure in evaluation.
                Supported options: 'squaredEuclidean', 'cosine';features_col=features column name;metric_name=metric
                name in evaluation (silhouette);prediction_col=prediction column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:sink_show">
                <xs:attribute name="distance_measure" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="metric_name" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_tuning_train_validation_split">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.tuning.TrainValidationSplit:collect_sub_models=whether to collect a list of
                sub-models trained during tuning. If set to false, then only the single best sub-model will be available
                after fitting. If set to true, then all sub-models will be available. Warning: For large models,
                collecting all sub-models can cause OOMs on the Spark
                driver;estimator_id=;estimator_param_maps_param_map=;evaluator_id=;parallelism=the number of threads to
                use when running parallel algorithms;seed=;train_ratio=ratio between training set and validation set (&gt;=
                0 &amp;&amp; &lt;= 1)
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="collect_sub_models" type="xs:boolean"/>
                <xs:attribute name="estimator_id" type="refs:estimator_id"/>
                <xs:attribute name="estimator_param_maps_param_map" type="xs:string"/>
                <xs:attribute name="evaluator_id" type="refs:evaluator_id"/>
                <xs:attribute name="parallelism" type="xs:int"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="train_ratio" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_string_indexer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.StringIndexerModel:handle_invalid=;input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_column_pruner">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.ColumnPruner:
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_random_forest_classifier">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.RandomForestClassifier:cache_node_ids=If false, the algorithm will
                pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for
                each instance. Caching can speed up training of deeper trees.;checkpoint_interval=set checkpoint
                interval (&gt;= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every
                10 iterations. Note: this setting will be ignored if the checkpoint directory is not set in the
                SparkContext;feature_sub_strategy=;features_col=features column name;impurity=Criterion used for
                information gain calculation (case-insensitive). Supported options: entropy, gini;label_col=label column
                name;max_bins=Max number of bins for discretizing continuous features. Must be &gt;=2 and &gt;= number
                of categories for any categorical feature.;max_depth=Maximum depth of the tree. (&gt;= 0) E.g., depth 0
                means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.;max_memory_in_mb=Maximum memory in MB
                allocated to histogram aggregation.;min_info_gain=Minimum information gain for a split to be considered
                at a tree node.;min_instances_per_node=Minimum number of instances each child must have after split. If
                a split causes the left or right child to have fewer than minInstancesPerNode, the split will be
                discarded as invalid. Should be &gt;= 1.;num_trees=Number of trees to train (&gt;=
                1);prediction_col=prediction column name;probability_col=Column name for predicted class conditional
                probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities
                should be treated as confidences, not precise probabilities;raw_prediction_col=raw prediction (a.k.a.
                confidence) column name;seed=;subsampling_rate=Fraction of the training data used for learning each
                decision tree, in range (0, 1].;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="num_trees" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_recommendation_als">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.recommendation.ALS:alpha=alpha for implicit preference;checkpoint_interval=set
                checkpoint interval (&gt;= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get
                checkpointed every 10 iterations. Note: this setting will be ignored if the checkpoint directory is not
                set in the SparkContext;cold_start_strategy=strategy for dealing with unknown or new users/items at
                prediction time. This may be useful in cross-validation or production scenarios, for handling user/item
                ids the model has not seen in the training data. Supported values:
                nan,drop.;final_storage_level=StorageLevel for ALS model factors.;implicit_prefs=whether to use implicit
                preference;intermediate_storage_level=StorageLevel for intermediate datasets. Cannot be
                'NONE'.;item_col=column name for item ids. Ids must be within the integer value range.;max_iter=maximum
                number of iterations (&gt;= 0);nonnegative=whether to use nonnegative constraint for least
                squares;num_blocks=;num_item_blocks=number of item blocks;num_user_blocks=number of user
                blocks;prediction_col=prediction column name;rank=rank of the factorization;rating_col=column name for
                ratings;reg_param=regularization parameter (&gt;= 0);seed=;user_col=column name for user ids. Ids must
                be within the integer value range.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="alpha" type="xs:double"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="cold_start_strategy" type="xs:string"/>
                <xs:attribute name="final_storage_level" type="xs:string"/>
                <xs:attribute name="implicit_prefs" type="xs:boolean"/>
                <xs:attribute name="intermediate_storage_level" type="xs:string"/>
                <xs:attribute name="item_col" type="xs:string"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="nonnegative" type="xs:boolean"/>
                <xs:attribute name="num_blocks" type="xs:int"/>
                <xs:attribute name="num_item_blocks" type="xs:int"/>
                <xs:attribute name="num_user_blocks" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="rank" type="xs:int"/>
                <xs:attribute name="rating_col" type="xs:string"/>
                <xs:attribute name="reg_param" type="xs:double"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="user_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_word_vec">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Word2VecModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_feature_hasher">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.FeatureHasher:categorical_cols_array_string=;input_cols_array_string=;num_features=number
                of features (&gt; 0);output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="categorical_cols_array_string" type="array_string"/>
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="num_features" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_bucketed_random_projection_lsh">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.BucketedRandomProjectionLSH:bucket_length=;input_col=;num_hash_tables=number
                of hash tables, where increasing number of hash tables lowers the false negative rate, and decreasing it
                improves the running performance;output_col=output column name;seed=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="bucket_length" type="xs:double"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="num_hash_tables" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_decision_tree_classifier">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.DecisionTreeClassifier:cache_node_ids=If false, the algorithm will
                pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for
                each instance. Caching can speed up training of deeper trees.;checkpoint_interval=set checkpoint
                interval (&gt;= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every
                10 iterations. Note: this setting will be ignored if the checkpoint directory is not set in the
                SparkContext;features_col=features column name;impurity=Criterion used for information gain calculation
                (case-insensitive). Supported options: entropy, gini;label_col=label column name;max_bins=Max number of
                bins for discretizing continuous features. Must be &gt;=2 and &gt;= number of categories for any
                categorical feature.;max_depth=Maximum depth of the tree. (&gt;= 0) E.g., depth 0 means 1 leaf node;
                depth 1 means 1 internal node + 2 leaf nodes.;max_memory_in_mb=Maximum memory in MB allocated to
                histogram aggregation.;min_info_gain=Minimum information gain for a split to be considered at a tree
                node.;min_instances_per_node=Minimum number of instances each child must have after split. If a split
                causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as
                invalid. Should be &gt;= 1.;prediction_col=prediction column name;probability_col=Column name for
                predicted class conditional probabilities. Note: Not all models output well-calibrated probability
                estimates! These probabilities should be treated as confidences, not precise
                probabilities;raw_prediction_col=raw prediction (a.k.a. confidence) column
                name;seed=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_random_forest_classification">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.RandomForestClassificationModel:cache_node_ids=;checkpoint_interval=;feature_sub_strategy=;features_col=;impurity=;max_bins=;max_depth=;max_memory_in_mb=;min_info_gain=;min_instances_per_node=;num_trees=;prediction_col=;probability_col=;raw_prediction_col=;seed=;subsampling_rate=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="num_trees" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_random_forest_regressor">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.RandomForestRegressor:cache_node_ids=If false, the algorithm will pass
                trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each
                instance. Caching can speed up training of deeper trees.;checkpoint_interval=set checkpoint interval (&gt;=
                1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations.
                Note: this setting will be ignored if the checkpoint directory is not set in the
                SparkContext;feature_sub_strategy=;features_col=features column name;impurity=Criterion used for
                information gain calculation (case-insensitive). Supported options: variance;label_col=label column
                name;max_bins=Max number of bins for discretizing continuous features. Must be &gt;=2 and &gt;= number
                of categories for any categorical feature.;max_depth=Maximum depth of the tree. (&gt;= 0) E.g., depth 0
                means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.;max_memory_in_mb=Maximum memory in MB
                allocated to histogram aggregation.;min_info_gain=Minimum information gain for a split to be considered
                at a tree node.;min_instances_per_node=Minimum number of instances each child must have after split. If
                a split causes the left or right child to have fewer than minInstancesPerNode, the split will be
                discarded as invalid. Should be &gt;= 1.;num_trees=Number of trees to train (&gt;=
                1);prediction_col=prediction column name;seed=;subsampling_rate=Fraction of the training data used for
                learning each decision tree, in range (0, 1].
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="num_trees" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_vector_size_hint">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.VectorSizeHint:handle_invalid=How to handle invalid vectors in inputCol.
                Invalid vectors include nulls and vectors with the wrong size. The options are `skip` (filter out rows
                with invalid vectors), `error` (throw an error) and `optimistic` (do not check the vector size, and keep
                all rows). `error` by default.;input_col=;size=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="size" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_isotonic_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.IsotonicRegression:feature_index=The index of the feature if featuresCol
                is a vector column, no effect otherwise (&gt;= 0);features_col=features column name;isotonic=whether the
                output sequence should be isotonic/increasing (true) or antitonic/decreasing (false);label_col=label
                column name;prediction_col=prediction column name;weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="feature_index" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="isotonic" type="xs:boolean"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_vector_attribute_rewriter">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.VectorAttributeRewriter:
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_clustering_lda">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.LDA:checkpoint_interval=set checkpoint interval (&gt;= 1) or disable
                checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations. Note: this
                setting will be ignored if the checkpoint directory is not set in the
                SparkContext;doc_concentration=;features_col=features column name;k=The number of topics (clusters) to
                infer. Must be &gt; 1.;keep_last_checkpoint=(For EM optimizer) If using checkpointing, this indicates
                whether to keep the last checkpoint. If false, then the checkpoint will be deleted. Deleting the
                checkpoint can cause failures if a data partition is lost, so set this bit with
                care.;learning_decay=(For online optimizer) Learning rate, set as an exponential decay rate. This should
                be between (0.5, 1.0] to guarantee asymptotic convergence.;learning_off=;max_iter=maximum number of
                iterations (&gt;= 0);optimize_doc_concentration=(For online optimizer only, currently) Indicates whether
                the docConcentration (Dirichlet parameter for document-topic distribution) will be optimized during
                training.;optimizer=Optimizer or inference algorithm used to estimate the LDA model. Supported: online,
                em;seed=;subsampling_rate=(For online optimizer) Fraction of the corpus to be sampled and used in each
                iteration of mini-batch gradient descent, in range (0,
                1].;topic_concentration=;topic_distribution_col=Output column with estimates of the topic mixture
                distribution for each document (often called &quot;theta&quot; in the literature). Returns a vector of
                zeros for an empty document.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="doc_concentration" type="xs:double"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="k" type="xs:int"/>
                <xs:attribute name="keep_last_checkpoint" type="xs:boolean"/>
                <xs:attribute name="learning_decay" type="xs:double"/>
                <xs:attribute name="learning_off" type="xs:double"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="optimize_doc_concentration" type="xs:boolean"/>
                <xs:attribute name="optimizer" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
                <xs:attribute name="topic_concentration" type="xs:double"/>
                <xs:attribute name="topic_distribution_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_max_abs_scaler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.MaxAbsScalerModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_imputer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.ImputerModel:input_cols_array_string=;output_cols_array_string=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="output_cols_array_string" type="array_string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_multilayer_perceptron_classifier">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.MultilayerPerceptronClassifier:block_size=Block size for stacking
                input data in matrices. Data is stacked within partitions. If block size is more than remaining data in
                a partition then it is adjusted to the size of this data. Recommended size is between 10 and
                1000;features_col=features column name;initial_weights_vector=;label_col=label column
                name;layers_array_int=;max_iter=maximum number of iterations (&gt;= 0);prediction_col=prediction column
                name;probability_col=Column name for predicted class conditional probabilities. Note: Not all models
                output well-calibrated probability estimates! These probabilities should be treated as confidences, not
                precise probabilities;raw_prediction_col=raw prediction (a.k.a. confidence) column name;seed=;solver=The
                solver algorithm for optimization. Supported options: l-bfgs, gd. (Default l-bfgs);step_size=Step size
                to be used for each iteration of optimization (&gt; 0);thresholds_array_double=;tol=the convergence
                tolerance for iterative algorithms (&gt;= 0)
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="block_size" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="initial_weights_vector" type="array_double"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="layers_array_int" type="array_int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="solver" type="xs:string"/>
                <xs:attribute name="step_size" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
                <xs:attribute name="tol" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_vector_slicer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.VectorSlicer:indices_array_int=An array of indices to select features from a
                vector column. There can be no overlap with names.;input_col=;names_array_string=An array of feature
                names to select features from a vector column. There can be no overlap with indices.;output_col=output
                column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="indices_array_int" type="array_int"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="names_array_string" type="array_string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_vector_indexer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.VectorIndexer:handle_invalid=How to handle invalid data (unseen labels or
                NULL values). Options are 'skip' (filter out rows with invalid data), 'error' (throw an error), or
                'keep' (put invalid data in a special additional bucket, at index of the number of categories of the
                feature).;input_col=;max_categories=Threshold for the number of values a categorical feature can take (&gt;=
                2). If a feature is found to have &gt; maxCategories values, then it is declared
                continuous.;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="max_categories" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_tuning_cross_validator">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.tuning.CrossValidatorModel:
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_min_hash_lsh">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.MinHashLSH:input_col=;num_hash_tables=number of hash tables, where
                increasing number of hash tables lowers the false negative rate, and decreasing it improves the running
                performance;output_col=output column name;seed=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="num_hash_tables" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_multilayer_perceptron_classification">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.MultilayerPerceptronClassificationModel:features_col=;prediction_col=;probability_col=;raw_prediction_col=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_fp_growth">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.fpm.FPGrowth:items_col=items column name;min_confidence=minimal confidence for
                generating Association Rule;min_support=the minimal support level of a frequent
                pattern;num_partitions=;prediction_col=prediction column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="items_col" type="xs:string"/>
                <xs:attribute name="min_confidence" type="xs:double"/>
                <xs:attribute name="min_support" type="xs:double"/>
                <xs:attribute name="num_partitions" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_gbt_classification">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.GBTClassificationModel:cache_node_ids=;checkpoint_interval=;feature_sub_strategy=;features_col=;impurity=;max_bins=;max_depth=;max_iter=;max_memory_in_mb=;min_info_gain=;min_instances_per_node=;prediction_col=;probability_col=;raw_prediction_col=;seed=;step_size=;subsampling_rate=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="step_size" type="xs:double"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="sink_ml_evaluator_binary_classification">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.evaluation.BinaryClassificationEvaluator:label_col=label column
                name;metric_name=metric name in evaluation (areaUnderROC|areaUnderPR);raw_prediction_col=raw prediction
                (a.k.a. confidence) column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:sink_show">
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="metric_name" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="sink_ml_evaluator_multiclass_classification">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator:label_col=label column
                name;metric_name=metric name in evaluation
                (f1|weightedPrecision|weightedRecall|accuracy);prediction_col=prediction column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:sink_show">
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="metric_name" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_clustering_db_scan">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.dbscan.DBScanModel:eps=;features_col=;groups_array_string=;min_point=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="eps" type="xs:double"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="groups_array_string" type="array_string"/>
                <xs:attribute name="min_point" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_quantile_discretizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.QuantileDiscretizer:handle_invalid=how to handle invalid entries. Options
                are skip (filter out rows with invalid values), error (throw an error), or keep (keep invalid values in
                a special additional bucket).;input_col=;input_cols_array_string=;num_buckets=Number of buckets
                (quantiles, or categories) into which data points are grouped. Must be &gt;=
                2.;num_buckets_array_array_int=;output_col=output column
                name;output_cols_array_string=;relative_error=The relative target precision for the approximate quantile
                algorithm used to generate buckets. Must be in the range [0, 1].
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="num_buckets" type="xs:int"/>
                <xs:attribute name="num_buckets_array_array_int" type="array_int"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="output_cols_array_string" type="array_string"/>
                <xs:attribute name="relative_error" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_clustering_k_means">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.KMeansModel:features_col=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_naive_bayes">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.NaiveBayesModel:features_col=;old_labels_array_double=;prediction_col=;probability_col=;raw_prediction_col=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="old_labels_array_double" type="array_double"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_interaction">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Interaction:input_cols_array_string=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_standard_scaler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.StandardScalerModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_decision_tree_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.DecisionTreeRegressionModel:cache_node_ids=;checkpoint_interval=;features_col=;impurity=;max_bins=;max_depth=;max_memory_in_mb=;min_info_gain=;min_instances_per_node=;prediction_col=;seed=;variance_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="variance_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_clustering_distributed_lda">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.DistributedLDAModel:features_col=;seed=;topic_distribution_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="topic_distribution_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_gbt_regressor">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.GBTRegressor:cache_node_ids=If false, the algorithm will pass trees to
                executors to match instances with nodes. If true, the algorithm will cache node IDs for each instance.
                Caching can speed up training of deeper trees.;checkpoint_interval=set checkpoint interval (&gt;= 1) or
                disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations. Note:
                this setting will be ignored if the checkpoint directory is not set in the
                SparkContext;feature_sub_strategy=;features_col=features column name;impurity=Criterion used for
                information gain calculation (case-insensitive). Supported options: variance;label_col=label column
                name;loss_type=Loss function which GBT tries to minimize (case-insensitive). Supported options: squared,
                absolute;max_bins=Max number of bins for discretizing continuous features. Must be &gt;=2 and &gt;=
                number of categories for any categorical feature.;max_depth=Maximum depth of the tree. (&gt;= 0) E.g.,
                depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.;max_iter=maximum number of
                iterations (&gt;= 0);max_memory_in_mb=Maximum memory in MB allocated to histogram
                aggregation.;min_info_gain=Minimum information gain for a split to be considered at a tree
                node.;min_instances_per_node=Minimum number of instances each child must have after split. If a split
                causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as
                invalid. Should be &gt;= 1.;prediction_col=prediction column name;seed=;step_size=Step size (a.k.a.
                learning rate) in interval (0, 1] for shrinking the contribution of each
                estimator.;subsampling_rate=Fraction of the training data used for learning each decision tree, in range
                (0, 1].;validation_indicator_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="loss_type" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="step_size" type="xs:double"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
                <xs:attribute name="validation_indicator_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_idf">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.IDFModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_clustering_db_scan">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.dbscan.DBScan:cluster_size_to_output_threshold=;eps=;features=;groups_array_string=;min_point=;scale=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cluster_size_to_output_threshold" type="xs:int"/>
                <xs:attribute name="eps" type="xs:double"/>
                <xs:attribute name="features" type="xs:string"/>
                <xs:attribute name="groups_array_string" type="array_string"/>
                <xs:attribute name="min_point" type="xs:int"/>
                <xs:attribute name="scale" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_group_linear_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.group.GroupLinearRegression:features=;groups_array_string=;label=;no_intercept=;prediction=;scale=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="features" type="xs:string"/>
                <xs:attribute name="groups_array_string" type="array_string"/>
                <xs:attribute name="label" type="xs:string"/>
                <xs:attribute name="no_intercept" type="xs:boolean"/>
                <xs:attribute name="prediction" type="xs:string"/>
                <xs:attribute name="scale" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_aft_survival_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.AFTSurvivalRegression:aggregation_depth=suggested depth for treeAggregate
                (&gt;= 2);censor_col=censor column name;features_col=features column name;fit_intercept=whether to fit
                an intercept term;label_col=label column name;max_iter=maximum number of iterations (&gt;=
                0);prediction_col=prediction column name;quantile_probabilities_array_double=quantile probabilities
                array;quantiles_col=;tol=the convergence tolerance for iterative algorithms (&gt;= 0)
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="aggregation_depth" type="xs:int"/>
                <xs:attribute name="censor_col" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="fit_intercept" type="xs:boolean"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="quantile_probabilities_array_double" type="array_double"/>
                <xs:attribute name="quantiles_col" type="xs:string"/>
                <xs:attribute name="tol" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_group_linear_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.group.GroupLinearRegressionModel:
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_decision_tree_classification">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.DecisionTreeClassificationModel:cache_node_ids=;checkpoint_interval=;features_col=;impurity=;max_bins=;max_depth=;max_memory_in_mb=;min_info_gain=;min_instances_per_node=;prediction_col=;probability_col=;raw_prediction_col=;seed=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_tokenizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Tokenizer:input_col=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="sink_ml_evaluator_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.evaluation.RegressionEvaluator:label_col=label column name;metric_name=metric name
                in evaluation (mse|rmse|r2|mae);prediction_col=prediction column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:sink_show">
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="metric_name" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_pca">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.PCAModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_normalizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Normalizer:input_col=;output_col=output column name;p=the p norm value
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="p" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_chi_sq_selector">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.ChiSqSelectorModel:features_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_r_formula">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.RFormula:features_col=features column name;force_index_label=Force to index
                label whether it is numeric or string;formula=;handle_invalid=How to handle invalid data (unseen or NULL
                values) in features and label column of string type. Options are 'skip' (filter out rows with invalid
                data), error (throw an error), or 'keep' (put invalid data in a special additional bucket, at index
                numLabels).;label_col=label column name;string_indexer_order_type=How to order categories of a string
                FEATURE column used by StringIndexer. The last category after ordering is dropped when encoding strings.
                Supported options: frequencyDesc, frequencyAsc, alphabetDesc, alphabetAsc. The default value is
                'frequencyDesc'. When the ordering is set to 'alphabetDesc', RFormula drops the same category as R when
                encoding strings.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="force_index_label" type="xs:boolean"/>
                <xs:attribute name="formula" type="xs:string"/>
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="string_indexer_order_type" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_linear_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.LinearRegressionModel:features_col=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_generalized_linear_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.GeneralizedLinearRegression:family=The name of family which is a
                description of the error distribution to be used in the model. Supported options: poisson, binomial,
                gaussian, gamma, tweedie.;features_col=features column name;fit_intercept=whether to fit an intercept
                term;label_col=label column name;link=;link_power=;link_prediction_col=;max_iter=maximum number of
                iterations (&gt;= 0);off_col=;prediction_col=prediction column name;reg_param=regularization parameter (&gt;=
                0);solver=The solver algorithm for optimization. Supported options: irls. (Default irls);tol=the
                convergence tolerance for iterative algorithms (&gt;= 0);variance_power=The power in the variance
                function of the Tweedie distribution which characterizes the relationship between the variance and mean
                of the distribution. Only applicable to the Tweedie family. Supported values: 0 and [1,
                Inf).;weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="family" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="fit_intercept" type="xs:boolean"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="link" type="xs:string"/>
                <xs:attribute name="link_power" type="xs:double"/>
                <xs:attribute name="link_prediction_col" type="xs:string"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="off_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="reg_param" type="xs:double"/>
                <xs:attribute name="solver" type="xs:string"/>
                <xs:attribute name="tol" type="xs:double"/>
                <xs:attribute name="variance_power" type="xs:double"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_bucketizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Bucketizer:handle_invalid=how to handle invalid entries. Options are skip
                (filter out rows with invalid values), error (throw an error), or keep (keep invalid values in a special
                additional bucket).;input_col=;input_cols_array_string=;output_col=output column
                name;output_cols_array_string=;splits_array_double=;splits_array_array_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="output_cols_array_string" type="array_string"/>
                <xs:attribute name="splits_array_double" type="array_double"/>
                <xs:attribute name="splits_array_array_array_double" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_dct">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.DCT:input_col=;inverse=Set transformer to perform inverse
                DCT;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="inverse" type="xs:boolean"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_count_vectorizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.CountVectorizerModel:binary=;input_col=;min_tf=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="binary" type="xs:boolean"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="min_tf" type="xs:double"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_binarizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Binarizer:input_col=;output_col=output column name;threshold=threshold used
                to binarize continuous features
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="threshold" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_vector_assembler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.VectorAssembler:handle_invalid=Param for how to handle invalid data (NULL
                and NaN values). Options are 'skip' (filter out rows with invalid data), 'error' (throw an error), or
                'keep' (return relevant number of NaN in the output). Column lengths are taken from the size of ML
                Attribute Group, which can be set using `VectorSizeHint` in a pipeline before `VectorAssembler`. Column
                lengths can also be inferred from first rows of the data since it is safe to do so but only in case of
                'error' or 'skip'.;input_cols_array_string=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_word_vec">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Word2Vec:input_col=;max_iter=maximum number of iterations (&gt;=
                0);max_sentence_length=Maximum length (in words) of each sentence in the input data. Any sentence longer
                than this threshold will be divided into chunks up to the size (&gt; 0);min_count=the minimum number of
                times a token must appear to be included in the word2vec model's vocabulary (&gt;=
                0);num_partitions=number of partitions for sentences of words (&gt; 0);output_col=output column
                name;seed=;step_size=Step size to be used for each iteration of optimization (&gt; 0);vector_size=the
                dimension of codes after transforming from words (&gt; 0);window_size=the window size (context words
                from [-window, window]) (&gt; 0)
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="max_sentence_length" type="xs:int"/>
                <xs:attribute name="min_count" type="xs:int"/>
                <xs:attribute name="num_partitions" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="step_size" type="xs:double"/>
                <xs:attribute name="vector_size" type="xs:int"/>
                <xs:attribute name="window_size" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_one_hot_encoder">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.OneHotEncoder:drop_last=whether to drop the last
                category;input_col=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="drop_last" type="xs:boolean"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_min_max_scaler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.MinMaxScaler:input_col=;max=upper bound of the output feature
                range;min=lower bound of the output feature range;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="max" type="xs:double"/>
                <xs:attribute name="min" type="xs:double"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_one_hot_encoder">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.OneHotEncoderModel:drop_last=;handle_invalid=;input_cols_array_string=;output_cols_array_string=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="drop_last" type="xs:boolean"/>
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="output_cols_array_string" type="array_string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_string_indexer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.StringIndexer:handle_invalid=How to handle invalid data (unseen labels or
                NULL values). Options are 'skip' (filter out rows with invalid data), error (throw an error), or 'keep'
                (put invalid data in a special additional bucket, at index numLabels).;input_col=;output_col=output
                column name;string_order_type=How to order labels of string column. The first label after ordering is
                assigned an index of 0. Supported options: frequencyDesc, frequencyAsc, alphabetDesc, alphabetAsc.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="string_order_type" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_r_formula">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.RFormulaModel:
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_vector_indexer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.VectorIndexerModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_regression_decision_tree_regressor">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.DecisionTreeRegressor:cache_node_ids=If false, the algorithm will pass
                trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each
                instance. Caching can speed up training of deeper trees.;checkpoint_interval=set checkpoint interval (&gt;=
                1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations.
                Note: this setting will be ignored if the checkpoint directory is not set in the
                SparkContext;features_col=features column name;impurity=Criterion used for information gain calculation
                (case-insensitive). Supported options: variance;label_col=label column name;max_bins=Max number of bins
                for discretizing continuous features. Must be &gt;=2 and &gt;= number of categories for any categorical
                feature.;max_depth=Maximum depth of the tree. (&gt;= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1
                internal node + 2 leaf nodes.;max_memory_in_mb=Maximum memory in MB allocated to histogram
                aggregation.;min_info_gain=Minimum information gain for a split to be considered at a tree
                node.;min_instances_per_node=Minimum number of instances each child must have after split. If a split
                causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as
                invalid. Should be &gt;= 1.;prediction_col=prediction column name;seed=;variance_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="variance_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_logistic_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.LogisticRegressionModel:features_col=;prediction_col=;probability_col=;raw_prediction_col=;threshold=;thresholds_array_double=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="threshold" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_gbt_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.GBTRegressionModel:cache_node_ids=;checkpoint_interval=;feature_sub_strategy=;features_col=;impurity=;max_bins=;max_depth=;max_iter=;max_memory_in_mb=;min_info_gain=;min_instances_per_node=;prediction_col=;seed=;step_size=;subsampling_rate=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="step_size" type="xs:double"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_count_vectorizer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.CountVectorizer:binary=If True, all non zero counts are set to
                1.;input_col=;max_df=Specifies the maximum number of different documents a term could appear in to be
                included in the vocabulary. A term that appears more than the threshold will be ignored. If this is an
                integer &gt;= 1, this specifies the maximum number of documents the term could appear in; if this is a
                double in [0,1), then this specifies the maximum fraction of documents the term could appear
                in.;min_df=Specifies the minimum number of different documents a term must appear in to be included in
                the vocabulary. If this is an integer &gt;= 1, this specifies the number of documents the term must
                appear in; if this is a double in [0,1), then this specifies the fraction of documents.;min_tf=Filter to
                ignore rare words in a document. For each document, terms with frequency/count less than the given
                threshold are ignored. If this is an integer &gt;= 1, then this specifies a count (of times the term
                must appear in the document); if this is a double in [0,1), then this specifies a fraction (out of the
                document's token count). Note that the parameter is only used in transform of CountVectorizerModel and
                does not affect fitting.;output_col=output column name;vocab_size=max size of the vocabulary
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="binary" type="xs:boolean"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="max_df" type="xs:double"/>
                <xs:attribute name="min_df" type="xs:double"/>
                <xs:attribute name="min_tf" type="xs:double"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="vocab_size" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_idf">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.IDF:input_col=;min_doc_freq=minimum number of documents in which a term
                should appear for filtering (&gt;= 0);output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="min_doc_freq" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_tuning_train_validation_split">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.tuning.TrainValidationSplitModel:
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_isotonic_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.IsotonicRegressionModel:feature_index=;features_col=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="feature_index" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_min_hash_lsh">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.MinHashLSHModel:input_col=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_imputer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.Imputer:input_cols_array_string=;missing_value=The placeholder for the
                missing values. All occurrences of missingValue will be
                imputed;output_cols_array_string=;strategy=strategy for imputation. If mean, then replace missing values
                using the mean value of the feature. If median, then replace missing values using the median value of
                the feature.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="missing_value" type="xs:double"/>
                <xs:attribute name="output_cols_array_string" type="array_string"/>
                <xs:attribute name="strategy" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_clustering_gaussian_mixture">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.GaussianMixtureModel:features_col=;prediction_col=;probability_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_clustering_bisecting_k_means">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.BisectingKMeans:distance_measure=The distance measure. Supported options:
                'euclidean' and 'cosine';features_col=features column name;k=The desired number of leaf clusters. Must
                be &gt; 1.;max_iter=maximum number of iterations (&gt;= 0);min_divisible_cluster_size=The minimum number
                of points (if &gt;= 1.0) or the minimum proportion of points (if &lt; 1.0) of a divisible
                cluster.;prediction_col=prediction column name;seed=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="distance_measure" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="k" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="min_divisible_cluster_size" type="xs:double"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_pca">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.PCA:input_col=;k=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="k" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_n_gram">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.NGram:input_col=;n=number elements per n-gram (&gt;=1);output_col=output
                column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="n" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_feature_min_max_scaler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.MinMaxScalerModel:input_col=;max=;min=;output_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="max" type="xs:double"/>
                <xs:attribute name="min" type="xs:double"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_max_abs_scaler">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.MaxAbsScaler:input_col=;output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_tuning_cross_validator">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.tuning.CrossValidator:collect_sub_models=whether to collect a list of sub-models
                trained during tuning. If set to false, then only the single best sub-model will be available after
                fitting. If set to true, then all sub-models will be available. Warning: For large models, collecting
                all sub-models can cause OOMs on the Spark
                driver;estimator_id=;estimator_param_maps_param_map=;evaluator_id=;num_folds=number of folds for cross
                validation (&gt;= 2);parallelism=the number of threads to use when running parallel algorithms;seed=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="collect_sub_models" type="xs:boolean"/>
                <xs:attribute name="estimator_id" type="refs:estimator_id"/>
                <xs:attribute name="estimator_param_maps_param_map" type="xs:string"/>
                <xs:attribute name="evaluator_id" type="refs:evaluator_id"/>
                <xs:attribute name="num_folds" type="xs:int"/>
                <xs:attribute name="parallelism" type="xs:int"/>
                <xs:attribute name="seed" type="xs:long"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_one_vs_rest">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.OneVsRest:classifier_id=;features_col=features column
                name;label_col=label column name;parallelism=the number of threads to use when running parallel
                algorithms;prediction_col=prediction column name;raw_prediction_col=raw prediction (a.k.a. confidence)
                column name;weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="classifier_id" type="refs:classifier_id"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="parallelism" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_elementwise_product">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.ElementwiseProduct:input_col=;output_col=output column
                name;scaling_vec_vector=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="scaling_vec_vector" type="array_double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_feature_one_hot_encoder">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.OneHotEncoderEstimator:drop_last=whether to drop the last
                category;handle_invalid=How to handle invalid data during transform(). Options are 'keep' (invalid data
                presented as an extra categorical feature) or error (throw an error). Note that this Param is only used
                during transform; during fitting, invalid data will result in an
                error.;input_cols_array_string=;output_cols_array_string=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="drop_last" type="xs:boolean"/>
                <xs:attribute name="handle_invalid" type="xs:string"/>
                <xs:attribute name="input_cols_array_string" type="array_string"/>
                <xs:attribute name="output_cols_array_string" type="array_string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_sql_transformer">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.SQLTransformer:statement=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="statement" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_linear_svc">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.LinearSVC:aggregation_depth=suggested depth for treeAggregate (&gt;=
                2);features_col=features column name;fit_intercept=whether to fit an intercept term;label_col=label
                column name;max_iter=maximum number of iterations (&gt;= 0);prediction_col=prediction column
                name;raw_prediction_col=raw prediction (a.k.a. confidence) column name;reg_param=regularization
                parameter (&gt;= 0);standardization=whether to standardize the training features before fitting the
                model;threshold=threshold in binary classification prediction applied to rawPrediction;tol=the
                convergence tolerance for iterative algorithms (&gt;= 0);weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="aggregation_depth" type="xs:int"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="fit_intercept" type="xs:boolean"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="reg_param" type="xs:double"/>
                <xs:attribute name="standardization" type="xs:boolean"/>
                <xs:attribute name="threshold" type="xs:double"/>
                <xs:attribute name="tol" type="xs:double"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_clustering_local_lda">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.LocalLDAModel:features_col=;seed=;topic_distribution_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="topic_distribution_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_clustering_bisecting_k_means">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.BisectingKMeansModel:features_col=;prediction_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_stop_words_remover">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.StopWordsRemover:case_sensitive=whether to do a case-sensitive comparison
                over the stop words;input_col=;locale=Locale of the input for case insensitive matching. Ignored when
                caseSensitive is true.;output_col=output column name;stop_words_array_string=the words to be filtered
                out
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="case_sensitive" type="xs:boolean"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="locale" type="xs:string"/>
                <xs:attribute name="output_col" type="xs:string"/>
                <xs:attribute name="stop_words_array_string" type="array_string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_transformer_feature_hashing_tf">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.feature.HashingTF:binary=If true, all non zero counts are set to 1. This is useful
                for discrete probabilistic models that model binary events rather than integer
                counts;input_col=;num_features=number of features (&gt; 0);output_col=output column name
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dw:transform_one_ref">
                <xs:attribute name="binary" type="xs:boolean"/>
                <xs:attribute name="input_col" type="xs:string"/>
                <xs:attribute name="num_features" type="xs:int"/>
                <xs:attribute name="output_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_regression_random_forest_regression">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.regression.RandomForestRegressionModel:cache_node_ids=;checkpoint_interval=;feature_sub_strategy=;features_col=;impurity=;max_bins=;max_depth=;max_memory_in_mb=;min_info_gain=;min_instances_per_node=;num_trees=;prediction_col=;seed=;subsampling_rate=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cache_node_ids" type="xs:boolean"/>
                <xs:attribute name="checkpoint_interval" type="xs:int"/>
                <xs:attribute name="feature_sub_strategy" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="impurity" type="xs:string"/>
                <xs:attribute name="max_bins" type="xs:int"/>
                <xs:attribute name="max_depth" type="xs:int"/>
                <xs:attribute name="max_memory_in_mb" type="xs:int"/>
                <xs:attribute name="min_info_gain" type="xs:double"/>
                <xs:attribute name="min_instances_per_node" type="xs:int"/>
                <xs:attribute name="num_trees" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="subsampling_rate" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_classification_naive_bayes">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.NaiveBayes:features_col=features column name;label_col=label column
                name;model_type=The model type which is a string (case-sensitive). Supported options: multinomial
                (default) and bernoulli.;prediction_col=prediction column name;probability_col=Column name for predicted
                class conditional probabilities. Note: Not all models output well-calibrated probability estimates!
                These probabilities should be treated as confidences, not precise probabilities;raw_prediction_col=raw
                prediction (a.k.a. confidence) column name;smoothing=The smoothing
                parameter.;thresholds_array_double=;weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="label_col" type="xs:string"/>
                <xs:attribute name="model_type" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="probability_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="smoothing" type="xs:double"/>
                <xs:attribute name="thresholds_array_double" type="array_double"/>
                <xs:attribute name="weight_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_classification_linear_svc">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.classification.LinearSVCModel:features_col=;prediction_col=;raw_prediction_col=;threshold=;weight_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="raw_prediction_col" type="xs:string"/>
                <xs:attribute name="threshold" type="xs:double"/>
                <xs:attribute name="weight_col" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_estimator_clustering_k_means">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.clustering.KMeans:distance_measure=The distance measure. Supported options:
                'euclidean' and 'cosine';features_col=features column name;init_mode=The initialization algorithm.
                Supported options: 'random' and 'k-means||'.;init_steps=The number of steps for k-means|| initialization
                mode. Must be &gt; 0.;k=The number of clusters to create. Must be &gt; 1.;max_iter=maximum number of
                iterations (&gt;= 0);prediction_col=prediction column name;seed=;tol=the convergence tolerance for
                iterative algorithms (&gt;= 0)
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_estimator">
                <xs:attribute name="distance_measure" type="xs:string"/>
                <xs:attribute name="features_col" type="xs:string"/>
                <xs:attribute name="init_mode" type="xs:string"/>
                <xs:attribute name="init_steps" type="xs:int"/>
                <xs:attribute name="k" type="xs:int"/>
                <xs:attribute name="max_iter" type="xs:int"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="seed" type="xs:long"/>
                <xs:attribute name="tol" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transform_ml_model_recommendation_als">
        <xs:annotation>
            <xs:documentation>
                org.apache.spark.ml.recommendation.ALSModel:cold_start_strategy=;item_col=;prediction_col=;user_col=
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="transform_ml_model">
                <xs:attribute name="cold_start_strategy" type="xs:string"/>
                <xs:attribute name="item_col" type="xs:string"/>
                <xs:attribute name="prediction_col" type="xs:string"/>
                <xs:attribute name="user_col" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="transforms">
        <xs:complexContent>
            <xs:extension base="dw:transforms">
                <xs:sequence>
                    <xs:choice>
                        <xs:element name="transform_ml_transformer_feature_feature_hasher"
                                    type="transform_ml_transformer_feature_feature_hasher" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_standard_scaler"
                                    type="transform_ml_model_feature_standard_scaler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_naive_bayes"
                                    type="transform_ml_model_classification_naive_bayes" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_tokenizer"
                                    type="transform_ml_transformer_feature_tokenizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_sql_transformer"
                                    type="transform_ml_transformer_feature_sql_transformer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_vector_attribute_rewriter"
                                    type="transform_ml_transformer_feature_vector_attribute_rewriter" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_one_hot_encoder"
                                    type="transform_ml_transformer_feature_one_hot_encoder" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_isotonic_regression"
                                    type="transform_ml_model_regression_isotonic_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_standard_scaler"
                                    type="transform_ml_estimator_feature_standard_scaler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_r_formula"
                                    type="transform_ml_estimator_feature_r_formula" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_min_hash_lsh"
                                    type="transform_ml_estimator_feature_min_hash_lsh" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_recommendation_als"
                                    type="transform_ml_estimator_recommendation_als" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_n_gram"
                                    type="transform_ml_transformer_feature_n_gram" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_linear_svc"
                                    type="transform_ml_estimator_classification_linear_svc" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_clustering_k_means"
                                    type="transform_ml_model_clustering_k_means" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_normalizer"
                                    type="transform_ml_transformer_feature_normalizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_bucketizer"
                                    type="transform_ml_model_feature_bucketizer" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_clustering_gaussian_mixture"
                                    type="transform_ml_estimator_clustering_gaussian_mixture" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_imputer"
                                    type="transform_ml_estimator_feature_imputer" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_clustering_db_scan"
                                    type="transform_ml_estimator_clustering_db_scan" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_column_pruner"
                                    type="transform_ml_transformer_feature_column_pruner" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_string_indexer"
                                    type="transform_ml_model_feature_string_indexer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_generalized_linear_regression"
                                    type="transform_ml_model_regression_generalized_linear_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_one_hot_encoder"
                                    type="transform_ml_estimator_feature_one_hot_encoder" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_group_linear_regression"
                                    type="transform_ml_model_regression_group_linear_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_min_hash_lsh"
                                    type="transform_ml_model_feature_min_hash_lsh" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_one_vs_rest"
                                    type="transform_ml_model_classification_one_vs_rest" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_multilayer_perceptron_classification"
                                    type="transform_ml_model_classification_multilayer_perceptron_classification"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_pca" type="transform_ml_model_feature_pca"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_linear_regression"
                                    type="transform_ml_estimator_regression_linear_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_tuning_cross_validator"
                                    type="transform_ml_model_tuning_cross_validator" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_gbt_regressor"
                                    type="transform_ml_estimator_regression_gbt_regressor" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_random_forest_classification"
                                    type="transform_ml_model_classification_random_forest_classification" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_r_formula"
                                    type="transform_ml_model_feature_r_formula" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_vector_indexer"
                                    type="transform_ml_model_feature_vector_indexer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_clustering_lda"
                                    type="transform_ml_estimator_clustering_lda" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_chi_sq_selector"
                                    type="transform_ml_estimator_feature_chi_sq_selector" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_recommendation_als"
                                    type="transform_ml_model_recommendation_als" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_linear_regression"
                                    type="transform_ml_model_regression_linear_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_fp_growth" type="transform_ml_model_fp_growth"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_clustering_local_lda"
                                    type="transform_ml_model_clustering_local_lda" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_vector_size_hint"
                                    type="transform_ml_transformer_feature_vector_size_hint" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_random_forest_classifier"
                                    type="transform_ml_estimator_classification_random_forest_classifier" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_one_hot_encoder"
                                    type="transform_ml_model_feature_one_hot_encoder" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_binarizer"
                                    type="transform_ml_transformer_feature_binarizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_index_to_string"
                                    type="transform_ml_transformer_feature_index_to_string" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_gbt_classifier"
                                    type="transform_ml_estimator_classification_gbt_classifier" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_clustering_db_scan"
                                    type="transform_ml_model_clustering_db_scan" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_tuning_cross_validator"
                                    type="transform_ml_estimator_tuning_cross_validator" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_vector_slicer"
                                    type="transform_ml_transformer_feature_vector_slicer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_generalized_linear_regression"
                                    type="transform_ml_estimator_regression_generalized_linear_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_tuning_train_validation_split"
                                    type="transform_ml_estimator_tuning_train_validation_split" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_isotonic_regression"
                                    type="transform_ml_estimator_regression_isotonic_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_naive_bayes"
                                    type="transform_ml_estimator_classification_naive_bayes" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_hashing_tf"
                                    type="transform_ml_transformer_feature_hashing_tf" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_group_linear_regression"
                                    type="transform_ml_estimator_regression_group_linear_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_max_abs_scaler"
                                    type="transform_ml_model_feature_max_abs_scaler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_word_vec"
                                    type="transform_ml_estimator_feature_word_vec" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_logistic_regression"
                                    type="transform_ml_model_classification_logistic_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_aft_survival_regression"
                                    type="transform_ml_model_regression_aft_survival_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_chi_sq_selector"
                                    type="transform_ml_model_feature_chi_sq_selector" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_word_vec"
                                    type="transform_ml_model_feature_word_vec" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_idf" type="transform_ml_model_feature_idf"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_decision_tree_classifier"
                                    type="transform_ml_estimator_classification_decision_tree_classifier" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_fp_growth" type="transform_ml_estimator_fp_growth"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_regex_tokenizer"
                                    type="transform_ml_transformer_feature_regex_tokenizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_pipeline" type="transform_ml_pipeline" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_stop_words_remover"
                                    type="transform_ml_transformer_feature_stop_words_remover" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_vector_indexer"
                                    type="transform_ml_estimator_feature_vector_indexer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_random_forest_regression"
                                    type="transform_ml_model_regression_random_forest_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_decision_tree_regressor"
                                    type="transform_ml_estimator_regression_decision_tree_regressor" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_interaction"
                                    type="transform_ml_transformer_feature_interaction" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_min_max_scaler"
                                    type="transform_ml_estimator_feature_min_max_scaler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_string_indexer"
                                    type="transform_ml_estimator_feature_string_indexer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_vector_assembler"
                                    type="transform_ml_transformer_feature_vector_assembler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_tuning_train_validation_split"
                                    type="transform_ml_model_tuning_train_validation_split" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_count_vectorizer"
                                    type="transform_ml_model_feature_count_vectorizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_gbt_classification"
                                    type="transform_ml_model_classification_gbt_classification" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_bucketed_random_projection_lsh"
                                    type="transform_ml_model_feature_bucketed_random_projection_lsh" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_max_abs_scaler"
                                    type="transform_ml_estimator_feature_max_abs_scaler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_decision_tree_regression"
                                    type="transform_ml_model_regression_decision_tree_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_random_forest_regressor"
                                    type="transform_ml_estimator_regression_random_forest_regressor" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_imputer" type="transform_ml_model_feature_imputer"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_clustering_bisecting_k_means"
                                    type="transform_ml_estimator_clustering_bisecting_k_means" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_clustering_k_means"
                                    type="transform_ml_estimator_clustering_k_means" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_feature_min_max_scaler"
                                    type="transform_ml_model_feature_min_max_scaler" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_logistic_regression"
                                    type="transform_ml_estimator_classification_logistic_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_one_vs_rest"
                                    type="transform_ml_estimator_classification_one_vs_rest" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_idf" type="transform_ml_estimator_feature_idf"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_bucketed_random_projection_lsh"
                                    type="transform_ml_estimator_feature_bucketed_random_projection_lsh" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_elementwise_product"
                                    type="transform_ml_transformer_feature_elementwise_product" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_pca" type="transform_ml_estimator_feature_pca"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_regression_gbt_regression"
                                    type="transform_ml_model_regression_gbt_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_decision_tree_classification"
                                    type="transform_ml_model_classification_decision_tree_classification" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_classification_multilayer_perceptron_classifier"
                                    type="transform_ml_estimator_classification_multilayer_perceptron_classifier"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_clustering_distributed_lda"
                                    type="transform_ml_model_clustering_distributed_lda" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_count_vectorizer"
                                    type="transform_ml_estimator_feature_count_vectorizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_classification_linear_svc"
                                    type="transform_ml_model_classification_linear_svc" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_clustering_gaussian_mixture"
                                    type="transform_ml_model_clustering_gaussian_mixture" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_model_clustering_bisecting_k_means"
                                    type="transform_ml_model_clustering_bisecting_k_means" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_feature_quantile_discretizer"
                                    type="transform_ml_estimator_feature_quantile_discretizer" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_polynomial_expansion"
                                    type="transform_ml_transformer_feature_polynomial_expansion" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_transformer_feature_dct"
                                    type="transform_ml_transformer_feature_dct" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="transform_ml_estimator_regression_aft_survival_regression"
                                    type="transform_ml_estimator_regression_aft_survival_regression" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="sinks">
        <xs:complexContent>
            <xs:extension base="dw:sinks">
                <xs:sequence>
                    <xs:choice>
                        <xs:element name="sink_ml_evaluator_regression" type="sink_ml_evaluator_regression"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="sink_ml_evaluator_binary_classification"
                                    type="sink_ml_evaluator_binary_classification" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="sink_ml_evaluator_clustering" type="sink_ml_evaluator_clustering"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="sink_ml_evaluator_multiclass_classification"
                                    type="sink_ml_evaluator_multiclass_classification" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>